# vim:fileencoding=utf-8:foldmethod=marker

# Classic Operator Mono with ligatures
# font_family Operator Mono Lig Light
# bold_font Operator Mono Lig Book
# italic_font Operator Mono Light Italic
# bold_italic_font Operator Mono Book Italic
# Operator Mono Nerdfonts
# font_family OperatorMonoLig Nerd Font Light
# bold_font OperatorMonoLig Nerd Font Book
# italic_font OperatorMonoLig Nerd Font Light Italic
# bold_italic_font Operator Mono Book Italic
# Monaspace
# font_family Monaspace Neon Var Light
# bold_font Monaspace Neon Var Medium
# italic_font Monaspace Radon Var Light
# bold_italic_font Monaspace Radon Var Medium
# font_features MonaspaceNeonVar-Light +calt +liga +dlig +ss01 +ss02 +ss03 +ss04 +ss05 +ss06 +ss07 +ss08
# font_features MonaspaceNeonVar-Medium +calt +liga +dlig +ss01 +ss02 +ss03 +ss04 +ss05 +ss06 +ss07 +ss08
# font_features MonaspaceRadonVar-Light +calt +liga +dlig +ss01 +ss02 +ss03 +ss04 +ss05 +ss06 +ss07 +ss08
# font_features MonaspaceRadonVar-Medium +calt +liga +dlig +ss01 +ss02 +ss03 +ss04 +ss05 +ss06 +ss07 +ss08
# Monaspace Nerd Font
font_family MonaspiceNe Nerd Font Mono Light
bold_font MonaspiceNe Nerd Font Mono Bold
italic_font MonaspiceRn Nerd Font Mono Light
bold_italic_font MonaspiceRn Nerd Font Mono Bold
font_features MonaspiceNeNFM-Light +calt +liga +dlig +ss01 +ss02 +ss03 +ss04 +ss05 +ss06 +ss07 +ss08
font_features MonaspiceNeNFM-Bold +calt +liga +dlig +ss01 +ss02 +ss03 +ss04 +ss05 +ss06 +ss07 +ss08
font_features MonaspiceRnNFM-Light +calt +liga +dlig +ss01 +ss02 +ss03 +ss04 +ss05 +ss06 +ss07 +ss08
font_features MonaspiceRnNFM-Bold +calt +liga +dlig +ss01 +ss02 +ss03 +ss04 +ss05 +ss06 +ss07 +ss08

font_size 12.0

# symbol_map

#: E.g. symbol_map U+E0A0-U+E0A3,U+E0C0-U+E0C7 PowerlineSymbols

#: Map the specified Unicode codepoints to a particular font. Useful
#: if you need special rendering for some symbols, such as for
#: Powerline. Avoids the need for patched fonts. Each Unicode code
#: point is specified in the form `U+<code point in hexadecimal>`. You
#: can specify multiple code points, separated by commas and ranges
#: separated by hyphens. This option can be specified multiple times.
#: The syntax is::

#:     symbol_map codepoints Font Family Name

symbol_map U+1FBF0-U+1FBF9 Noto Sans Symbols 2 Regular

copy_on_select clipboard

#: Copy to clipboard or a private buffer on select. With this set to
#: clipboard, selecting text with the mouse will cause the text to be
#: copied to clipboard. Useful on platforms such as macOS that do not
#: have the concept of primary selection. You can instead specify a
#: name such as a1 to copy to a private kitty buffer. Map a shortcut
#: with the paste_from_buffer action to paste from this private
#: buffer. For example::

#:     copy_on_select a1
#:     map shift+cmd+v paste_from_buffer a1

#: Note that copying to the clipboard is a security risk, as all
#: programs, including websites open in your browser can read the
#: contents of the system clipboard.


#: Tab bar {{{

# tab_bar_style fade
tab_bar_style powerline

#: The tab bar style, can be one of:

#: fade
#:     Each tab's edges fade into the background color. (See also tab_fade)
#: slant
#:     Tabs look like the tabs in a physical file.
#: separator
#:     Tabs are separated by a configurable separator. (See also
#:     tab_separator)
#: powerline
#:     Tabs are shown as a continuous line with "fancy" separators.
#:     (See also tab_powerline_style)
#: custom
#:     A user-supplied Python function called draw_tab is loaded from the file
#:     tab_bar.py in the kitty config directory. For examples of how to
#:     write such a function, see the functions named draw_tab_with_* in
#:     kitty's source code: kitty/tab_bar.py. See also
#:     this discussion <https://github.com/kovidgoyal/kitty/discussions/4447>
#:     for examples from kitty users.
#: hidden
#:     The tab bar is hidden. If you use this, you might want to create
#:     a mapping for the select_tab action which presents you with a list of
#:     tabs and allows for easy switching to a tab.

# vim:ft=kitty

## name: Tokyo Night
## license: MIT
## author: Folke Lemaitre
## upstream: https://github.com/folke/tokyonight.nvim/raw/main/extras/kitty/tokyonight_night.conf

background #1a1b26
foreground #c0caf5
selection_background #283457
selection_foreground #c0caf5
url_color #73daca
cursor #c0caf5
cursor_text_color #1a1b26

# Tabs
active_tab_background #7aa2f7
active_tab_foreground #16161e
inactive_tab_background #292e42
inactive_tab_foreground #545c7e
#tab_bar_background #15161e

# Windows
active_border_color #7aa2f7
inactive_border_color #292e42

# normal
color0 #15161e
color1 #f7768e
color2 #9ece6a
color3 #e0af68
color4 #7aa2f7
color5 #bb9af7
color6 #7dcfff
color7 #a9b1d6

# bright
color8 #414868
color9 #f7768e
color10 #9ece6a
color11 #e0af68
color12 #7aa2f7
color13 #bb9af7
color14 #7dcfff
color15 #c0caf5

# extended colors
color16 #ff9e64
color17 #db4b4b

#: }}}

#: }}}

#: Advanced {{{

# shell .
shell /opt/homebrew/bin/zsh --login -c "tmux attach 2>/dev/null || tmux"

#: The shell program to execute. The default value of . means to use
#: whatever shell is set as the default shell for the current user.
#: Note that on macOS if you change this, you might need to add
#: --login and --interactive to ensure that the shell starts in
#: interactive mode and reads its startup rc files.

# No-one likes a default auto-updater KOYLE
update_check_interval 0

#: The interval to periodically check if an update to kitty is
#: available (in hours). If an update is found, a system notification
#: is displayed informing you of the available update. The default is
#: to check every 24 hours, set to zero to disable. Update checking is
#: only done by the official binary builds. Distro packages or source
#: builds do not do update checking. Changing this option by reloading
#: the config is not supported.

#: OS specific tweaks {{{

# wayland_titlebar_color system

#: The color of the kitty window's titlebar on Wayland systems with
#: client side window decorations such as GNOME. A value of system
#: means to use the default system color, a value of background means
#: to use the background color of the currently active window and
#: finally you can use an arbitrary color, such as #12af59 or red.

# macos_titlebar_color system
macos_titlebar_color background


# macos_colorspace srgb
macos_colorspace default

# kitty_mod ctrl+shift
kitty_mod none

#: Special modifier key alias for default shortcuts. You can change
#: the value of this option to alter all default shortcuts that use
#: kitty_mod.

# clear_all_shortcuts no
clear_all_shortcuts yes

#: Remove all shortcut definitions up to this point. Useful, for
#: instance, to remove the default shortcuts.

# Dan's tmux shortcuts
map key super+t /opt/homebrew/bin/tmux new-window
map key super+w tmux kill-window
map key super+[ tmux select-pane -t :.-
map key super+] tmux select-pane -t :.+
map key super+shift+[ tmux select-window -t :-
map key super+shift+] tmux select-window -t :+
map key super+c tmux send-keys -X copy-pipe-and-cancel "pbcopy"
map key super+s tmux split-window -h -c '#{pane_current_path}'
map key super+b tmux split-window -v -c '#{pane_current_path}'
map key super+1 tmux select-window -t 1
map key super+2 tmux select-window -t 2
map key super+3 tmux select-window -t 3
map key super+4 tmux select-window -t 4
map key super+5 tmux select-window -t 5
map key super+6 tmux select-window -t 6
map key super+7 tmux select-window -t 7
map key super+8 tmux select-window -t 8
map key super+9 tmux select-window -t 9
map key super+0 tmux select-window -t 10
map key super+minus tmux select-window -t 11
map key super+equal tmux select-window -t 12

#: Clipboard {{{

#: Copy to clipboard

# map kitty_mod+c copy_to_clipboard
map cmd+c       copy_to_clipboard

#: Paste from clipboard

# map kitty_mod+v paste_from_clipboard
map cmd+v       paste_from_clipboard
